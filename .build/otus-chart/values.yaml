apps:

  # Application: otus-service-auth
  auth:
    name: auth
    port: 8000
    enabled: true
    replicaCount: 2
    paths:
      # base url for openapi
      openapi: /otusapp/auth/openapi
    image:
      repository: palevo/otus-service-auth
    metrics:
      enabled: true
    service:
      type: ClusterIP
      port: 8080
    ingress:
      host: arch.homework
      basePath: /otusapp
      paths:
        auth: /otusapp/(auth)($|/)(.*)
        openapi: /(otusapp/auth/openapi)($|/)(.*)
        actuator: /otusapp/auth/(actuator)($|/)(.*)
      annotations: {
        nginx.ingress.kubernetes.io/rewrite-target: /$1/$3
      }

  # Application: otus-service-api
  api:
    name: api
    port: 8000
    enabled: true
    replicaCount: 2
    paths:
      # base url for openapi
      openapi: /otusapp/openapi
    image:
      repository: palevo/otus-service-api
    metrics:
      enabled: true
    service:
      type: ClusterIP
      port: 8081
    ingress:
      host: arch.homework
      basePath: /otusapp
      paths:
        api: /otusapp/(users)($|/)(.*)
        openapi: /(otusapp/openapi)($|/)(.*)
        actuator: /otusapp/(actuator)($|/)(.*)
      annotations: {
        nginx.ingress.kubernetes.io/auth-url: "/auth",
        nginx.ingress.kubernetes.io/auth-signin: "/auth/login",
        nginx.ingress.kubernetes.io/auth-response-headers: "Authorization",
        nginx.ingress.kubernetes.io/rewrite-target: /$1/$3
      }


# Postgres SQL
postgresql:
  enabled: true
  postgresqlUsername: admin
  postgresqlPassword: admin
  postgresqlDatabase: otus-db
  service:
    port: "5432"
  persistence:
    size: 1Gi
  volumePermissions:
    enabled: true
