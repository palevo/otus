apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-db
  labels:
  {{- include "app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-init-db
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          env:
            - name: POSTGRES_HOST
              value: {{ include "postgresql.name" . | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.service.port | quote }}
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST  -p  $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: {{ .Release.Name }}-init-db
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRES_PASS
          command:
            - sh
            - "-c"
            - |
              psql postgresql://$POSTGRES_USER:$POSTGRES_PASS@{{ include "postgresql.uri" . }} <<'EOF'
                TRUNCATE TABLE tbl_user;
                INSERT INTO tbl_user (id, name, email) VALUES (1, 'User Name', 'user@email.com');
              EOF
  backoffLimit: 0
