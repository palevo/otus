apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.app.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.app.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP
          env:
            - name: otus.version
              value: "{{ .Chart.AppVersion }}"
            - name: server.port
              value: "{{ .Values.app.port }}"
            - name: spring.datasource.url
              valueFrom:
                secretKeyRef:
                  name: otus-secret
                  key: DB_URI
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: otus-secret
                  key: DB_USER
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: otus-secret
                  key: DB_PASS
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
